// JVM загружает класс JvmComprehension с помощью системного ClassLoader.
// В метаспейсе создается запись для класса JvmComprehension.
public class JvmComprehension {

    // В стэке создается новый фрейм для метода main.
    public static void main(String[] args) {

        int i = 1;                      // 1 Создается новый фрейм для метода main.
        // Переменной i выделяется место в стеке и присваивается значение 1.
        Object o = new Object();        // 2 В куче выделяется память для нового объекта Object.
        // Переменной o в стэке присваивается ссылка на этот объект.
        Integer ii = 2;                 // 3 В куче выделяется память для объекта Integer со значением 2.
        // Переменной ii в стэке присваивается ссылка на этот объект.
        printAll(o, i, ii);             // 4 Создается новый фрейм для метода printAll.
        // Переменным o, i и ii в стэке присваиваются переданные в метод значения.
        System.out.println("finished"); // 7 В стэке создается фрейм println,
        // которому передается ссылка на созданный в Куче объект String со значением "finished".
        // Сам же объект типа String создается для хранения в хипе.
    }

    // Создается новый фрейм для метода printAll.
    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 В Куче создается объект Integer со значением 700,
        // Во фрейме printAll добавляется переменная uselessVar с ссылкой на этот объект.
        //Данная переменная не используется в методе и будет удалена сборщиком мусора.
        System.out.println(o.toString() + i + ii);  // 6 В стэке создается фрейм println куда передаются ссылки
        // на Object o, int i и Integer ii. В стэке созается фрейм toString.
    }

}
